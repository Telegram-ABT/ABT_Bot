import time
import os
import random
import logging
from datetime import datetime, timedelta
from pymongo import MongoClient
import telebot

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–∞
logging.basicConfig(
    filename='combo_publisher.log',  # –õ–æ–≥-—Ñ–∞–π–ª
    filemode='a',  # –†–µ–∂–∏–º –∑–∞–ø–∏—Å–∏ (a - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π)
    format='%(asctime)s - %(levelname)s - %(message)s',  # –§–æ—Ä–º–∞—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    level=logging.INFO  # –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (DEBUG, INFO, WARNING, ERROR, CRITICAL)
)

logger = logging.getLogger()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB —á–µ—Ä–µ–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–∫—Ä—É–∂–µ–Ω–∏—è
mongo_url = os.getenv('MONGO_URL')  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ URL MongoDB —Å–µ—Ä–≤–µ—Ä–∞
db_name = 'aibetrade'  # –ù–∞–∑–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
collection_name = 'combo'  # –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MongoDB
client = MongoClient(mongo_url)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ Telegram —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
telegram_token = os.getenv('API_BOT_CR')  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à Telegram Bot API token
chat_id_ru = '-1001609461642'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID —á–∞—Ç–∞ –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ –ø–æ—Å—Ç–∞
chat_id_en = '-1001967803227'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID —á–∞—Ç–∞ –¥–ª—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –ø–æ—Å—Ç–∞

bot = telebot.TeleBot(telegram_token)

# –ü—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º
image_path_ru = 'pic/combo_rus.jpg'
image_path_en = 'pic/combo_eng.jpg'

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
def check_db_and_collection():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    db_list = client.list_database_names()
    if db_name in db_list:
        logger.info(f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '{db_name}' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
        db = client[db_name]
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
        if collection_name in db.list_collection_names():
            logger.info(f"–ö–æ–ª–ª–µ–∫—Ü–∏—è '{collection_name}' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            return True
        else:
            logger.warning(f"–ö–æ–ª–ª–µ–∫—Ü–∏—è '{collection_name}' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
            return False
    else:
        logger.warning(f"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö '{db_name}' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.")
        return False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram
def publish_to_telegram(combo_text_ru, combo_text_en):
    try:
        # –ü—É–±–ª–∏–∫–∞—Ü–∏—è —Ä—É—Å—Å–∫–æ–≥–æ –ø–æ—Å—Ç–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
        markup_ru = telebot.types.InlineKeyboardMarkup()
        button1_ru = telebot.types.InlineKeyboardButton("üöÄ ABT Miner", url="https://t.me/aibetradecombot")
        button2_ru = telebot.types.InlineKeyboardButton("üíº –ê–º–±–∞", url="https://forms.gle/CuJJGWReWM8STR1S7")
        markup_ru.add(button1_ru, button2_ru)

        with open(image_path_ru, 'rb') as photo_ru:
            bot.send_photo(chat_id_ru, photo_ru, caption=combo_text_ru, reply_markup=markup_ru, parse_mode='HTML')

        # –ü—É–±–ª–∏–∫–∞—Ü–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ –ø–æ—Å—Ç–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π
        markup_en = telebot.types.InlineKeyboardMarkup()
        button1_en = telebot.types.InlineKeyboardButton("üöÄ ABT Miner", url="https://t.me/aibetradecombot")
        button2_en = telebot.types.InlineKeyboardButton("üíº Be Ambas", url="https://forms.gle/2P3GwRaMWt1Q381A6")
        markup_en.add(button1_en, button2_en)

        with open(image_path_en, 'rb') as photo_en:
            bot.send_photo(chat_id_en, photo_en, caption=combo_text_en, reply_markup=markup_en, parse_mode='HTML')

        logger.info("–°–æ–æ–±—â–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã –≤ Telegram.")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–µ–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–æ–¥–∞
def generate_combo_data():
    # –®–∞–≥ 1: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏–∑ 8 –ø–æ–ª–æ–∂–µ–Ω–∏–π
    positions = ["left", "right", "down", "up"]
    combo = ",".join(random.choices(positions, k=8))

    # –®–∞–≥ 2: –ó–∞–º–µ–Ω—è–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ —ç–º–æ–¥–∑–∏ –∏ –æ–¥–Ω–æ —Å–ª—É—á–∞–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ ‚ùì
    emoji_mapping = {
        "left": "‚¨ÖÔ∏è",
        "right": "‚û°Ô∏è",
        "down": "‚¨áÔ∏è",
        "up": "‚¨ÜÔ∏è"
    }

    combo_list = combo.split(",")
    random_index = random.randint(0, 7)  # –°–ª—É—á–∞–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞–º–µ–Ω—ã –Ω–∞ ‚ùì
    combodays_list = [emoji_mapping.get(pos, pos) for pos in combo_list]
    combodays_list[random_index] = "‚ùì"
    combodays = "".join(combodays_list)  # –£–±–∏—Ä–∞–µ–º –∑–∞–ø—è—Ç—ã–µ –∏ –ø—Ä–æ–±–µ–ª—ã

    # –®–∞–≥ 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–∞ —Ä—É—Å—Å–∫–æ–º –∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º
    combo_text_ru = f"<b>–í—Å–µ–º</b> üëã\n\n–£—Ç—Ä–µ–Ω–Ω–∏–π —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥ —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n\n{combodays}\n\n<b>–û—Ç–ª–∏—á–Ω–æ–≥–æ –¥–Ω—è!</b> üòé"
    combo_text_en = f"<b>Hello everyone</b> üëã\n\nThe morning secret code is now activated!\n\n{combodays}\n\n<b>Have a great day!</b> üòé"

    # –®–∞–≥ 4: –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏ –≤ MongoDB
    now = datetime.now()
    date_str = now.strftime('%Y%m%d')  # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –≥–æ–¥, –º–µ—Å—è—Ü –∏ –¥–µ–Ω—å
    uid = f"SUMMERCOMBO{date_str}"
    name = f"Mega Lega Combo {date_str}"

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞ –¥–ª—è –ø–æ–ª—è amount
    random_amount = random.randint(5, 500) * 1000000000

    # –î–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞
    start_at = now.replace(hour=0, minute=0, second=0, microsecond=0)
    end_at = start_at + timedelta(days=2, seconds=-1)

    # –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø–∏—Å–∏
    data = {
        "uid": uid,
        "name": name,
        "code": combo,
        "currencyCode": "abt",
        "precision": 9,
        "amount": int(random_amount),
        "priseCode": "",
        "limit": 5000000,
        "count": 0,
        "startAt": start_at,
        "endAt": end_at,
        "isActive": True
    }

    return data, combo_text_ru, combo_text_en

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ø—ã—Ç–∫–∏ –∑–∞–ø–∏—Å–∏ –≤ MongoDB —Å –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –¥–∞–Ω–Ω—ã—Ö –≤ —Å–ª—É—á–∞–µ –Ω–µ—É–¥–∞—á–∏
def attempt_to_save_data():
    while True:
        try:
            # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
            data, combo_text_ru, combo_text_en = generate_combo_data()

            # –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ MongoDB
            collection = client[db_name][collection_name]  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é
            collection.insert_one(data)
            logger.info(f"–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ MongoDB: {data}")
            
            # –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –∑–∞–ø–∏—Å–∏ –ø—É–±–ª–∏–∫—É–µ–º –≤ Telegram
            publish_to_telegram(combo_text_ru, combo_text_en)
            break  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª, –µ—Å–ª–∏ –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–∞

        except Exception as e:
            # –í —Å–ª—É—á–∞–µ –Ω–µ—É–¥–∞—á–∏ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏ –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤ MongoDB: {e}. –ü–µ—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö...")

def run_at_9am():
    if check_db_and_collection():  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
        while True:
            now = datetime.now()
            target_time = now.replace(hour=9, minute=0, second=0, microsecond=0)

            # –ï—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —É–∂–µ –ø—Ä–æ—à–ª–æ 9:00 —Å–µ–≥–æ–¥–Ω—è, –∂–¥—ë–º –¥–æ 9:00 —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–Ω—è
            if now > target_time:
                target_time += timedelta(days=1)

            # –í—ã—á–∏—Å–ª—è–µ–º, —Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –¥–æ 9 —É—Ç—Ä–∞
            time_to_wait = (target_time - now).total_seconds()
            logger.info(f"–û–∂–∏–¥–∞–Ω–∏–µ –¥–æ 9 —É—Ç—Ä–∞: {time_to_wait // 3600} —á–∞—Å–æ–≤, {time_to_wait % 3600 // 60} –º–∏–Ω—É—Ç")
            
            # –ñ–¥–µ–º –¥–æ 9 —É—Ç—Ä–∞
            time.sleep(time_to_wait)

            # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ø—ã—Ç–∫—É –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ MongoDB –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram
            attempt_to_save_data()

    else:
        logger.error("–û—à–∏–±–∫–∞: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ–ª–ª–µ–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—Ç.")

# –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
def run_once():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    if check_db_and_collection():
        now = datetime.now()
        target_time = now.replace(hour=9, minute=0, second=0, microsecond=0)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è —Å 9:00 —É—Ç—Ä–∞
        logger.info("–ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å...")
            
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ø—ã—Ç–∫—É –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ MongoDB –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Telegram
        attempt_to_save_data()
    else:
        logger.error("–û—à–∏–±–∫–∞: –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏ –∫–æ–ª–ª–µ–∫—Ü–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—Ç.")

# –ó–∞–ø—É—Å–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
if __name__ == "__main__":
    # run_once()
    run_at_9am()
